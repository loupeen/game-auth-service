name: Deploy Game Auth Service

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - '.github/**'
      - '!.github/workflows/**'
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened, closed]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'test'
        type: choice
        options:
          - test
          - qa
          - production
      enable_monitoring:
        description: 'Enable CloudWatch Synthetics monitoring'
        required: false
        default: 'false'
        type: boolean

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  changes:
    name: Detect Changes
    runs-on: ubuntu-latest
    outputs:
      should-deploy: ${{ steps.changes.outputs.should-deploy }}
      target-environment: ${{ steps.env.outputs.target-environment }}
    
    steps:
      - name: 🔧 Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🔍 Detect Changes
        id: changes
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "should-deploy=true" >> $GITHUB_OUTPUT
            echo "Manual deployment requested"
          elif [ "${{ github.event_name }}" = "push" ]; then
            echo "should-deploy=true" >> $GITHUB_OUTPUT
            echo "Push to main branch"
          elif [ "${{ github.event_name }}" = "pull_request" ] && [ "${{ github.event.action }}" = "closed" ] && [ "${{ github.event.pull_request.merged }}" = "true" ]; then
            echo "should-deploy=true" >> $GITHUB_OUTPUT
            echo "PR merged to main"
          else
            echo "should-deploy=false" >> $GITHUB_OUTPUT
            echo "No deployment needed for this event"
          fi

      - name: 🎯 Determine Target Environment
        id: env
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "target-environment=${{ inputs.environment }}" >> $GITHUB_OUTPUT
          else
            # Auto-deploy to test on push/merge to main
            echo "target-environment=test" >> $GITHUB_OUTPUT
          fi

  deploy:
    name: Deploy (${{ needs.changes.outputs.target-environment }})
    needs: changes
    if: needs.changes.outputs.should-deploy == 'true'
    uses: ./.github/workflows/deploy-${{ needs.changes.outputs.target-environment }}.yml
    with:
      enable_monitoring: ${{ inputs.enable_monitoring || false }}
    secrets: inherit

  deployment-notification:
    name: Deployment Notification
    runs-on: ubuntu-latest
    needs: [changes, deploy]
    if: always() && needs.changes.outputs.should-deploy == 'true'
    
    steps:
      - name: ✅ Deployment Success
        if: needs.deploy.result == 'success'
        run: |
          echo "🎉 Deployment to ${{ needs.changes.outputs.target-environment }} completed successfully!"
          echo "🔗 Environment: ${{ needs.changes.outputs.target-environment }}"
          echo "📊 Monitoring: ${{ inputs.enable_monitoring || 'false' }}"
          echo "🚀 Ready for next stage"

      - name: ❌ Deployment Failed
        if: needs.deploy.result == 'failure'
        run: |
          echo "🚨 Deployment to ${{ needs.changes.outputs.target-environment }} failed!"
          echo "🔍 Check workflow logs for details"
          echo "⚠️ Manual intervention may be required"

      - name: ⏭️ Next Steps
        if: needs.deploy.result == 'success' && needs.changes.outputs.target-environment == 'test'
        run: |
          echo "📋 Next steps after successful test deployment:"
          echo "1. 🧪 Run comprehensive integration tests"
          echo "2. 🔍 Validate monitoring dashboards" 
          echo "3. 🚀 Consider promoting to QA environment"
          echo "4. 📊 Review performance metrics"